// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id String @id @default(uuid()) @db.Char(40)
  nome String @db.VarChar(100)
  email String @unique @db.VarChar(100)
  senha String @db.Char(60)
  tipoUsuario TipoUsuario @relation(fields: [tipoUsuarioId], references: [id])
  tipoUsuarioId String @db.Char(40)
  pontuacao Int @default(0)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  unidadesCompletadas UnidadeCompletada[]
}

model TipoUsuario {
  id String @id @default(uuid()) @db.Char(40)
  rotulo String @db.VarChar(10)
  
  usuarios Usuario[]
}

model Unidade{
  id String @id @default(uuid()) @db.Char(40)
  titulo String @db.VarChar(100)
  createdAt DateTime @default(now()) @map("created_at")

  unidadeCompletada UnidadeCompletada[]
}

model UnidadeCompletada {
  id String @id @default(uuid()) @db.Char(40)
  completada Boolean @default(false)
  completouEm DateTime @default(now()) @map("completou_em")
  unidade Unidade @relation(fields: [unidadeId], references: [id])
  unidadeId String @db.Char(40)
  usuario Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId String @db.Char(40)
}
